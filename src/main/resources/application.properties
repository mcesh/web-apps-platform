#Data source config
spring.datasource.url=jdbc:mysql://localhost:3306/mock_photo
spring.datasource.username=Fixer@17-92-73
spring.datasource.password=F67Yionghre@erb
spring.jpa.hibernate.ddl-auto=update
tokenSecret = qFUch1xxu4jtKixVyLWGgxL0mPMGNHmRGl2oQUrI7FxtQYz5Dr5KGmGveVgyJve
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
server.servlet.context-path=/web-apps-platform/
spring.servlet.multipart.max-file-size=50MB
server.max-http-header-size=10000000
#Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=465
mail.smtp.auth=true
enable_starttls_auto: true
spring.mail.username=siyathedev@gmail.com
spring.mail.password=drPEKqVgD
spring.mail.protocol=smtps

#Support Email
support.email=nustasm12@gmail.com
spring.security.user.name=user
spring.mail.default-encoding=UTF-8
spring.security.user.password=$2a$10$mwbg/0vCGW/wiKtjS1CcTOW7FeBzqFTpOy0O3466Gt7VeLjhajkZe
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
userResource.authorizationHeader.description = Bear JWT Token;
userResource.GetUserByUserId.ApiOperation.Notes = This Webservice Endpoint returns user details User provides UserId in the URL path \
  usage example. users/123.
userResource.Username.ApiOperation.Notes = This Webservice Endpoint returns user details, User provides username in the URL path \
  usage example. users/username/user-1, It will be consumed by front end to fetch user details after login\
  user provides their email address and password\
  email address must be verified first.
userResource.CreateUser.ApiOperation.Notes = This Webservice Endpoint allows users to register in our back end database and store \
   their details.
userResource.UpdateUsersDetails.ApiOperation.Notes = This Webservice allows a user to update their details usage users/123 \
  with body json body payload to update records

userResource.FirstName.ApiOperation.Notes = This Webservice returns all users with the given name, if there is no user we throw \
  an error for no users found usage firstName/{firstName}

userResource.DeleteUserById.ApiOperation.Notes = This Webservice deletes the user with specified id usage user/123

userResource.GetUsers.ApiOperation.Notes = This webservice returns all users in the database limit is 900

userResource.GetUserAddressesByUserId.ApiOperation.Notes = This Webservice returns all addresses for the specified userId
serResource.GetUserAddress.ApiOperation.Notes = This Webservice returns address for the specified userId and addressId
userResource.EmailVerification.ApiOperation.Notes = This Webservice verifies a token that has been sent to a user \
  during registration
userResource.PasswordResetRequest.ApiOperation.Notes = This Webservice allows users to request for password reset in\
   case they forgot their login password
userResource.PasswordReset.ApiOperation.Notes = This Webservice allows users to reset their password
userResource.GetUser.ApiOperation.Notes = This Webservice returns a specified number of verified \
  users it is sorted in a reverse order in order for a Support Engineer to quickly see latest registered clients
userAppRequestResource.RequestAppDevelopment.ApiOperation.Notes = This Endpoint is for users who want us to build \
  websites for them they will log a request via this API endpoint

userAppRequestResource.AppRequestEmailVerification.ApiOperation.Notes = This webservice allows users who request \
  application development to 

userResource.EmailAddress.ApiOperation.Notes = This Webservice Endpoint returns user details, User provides email \
  address in the URL path \
  usage example. users/email/test@gmail.com, It will be consumed by front end to fetch user details after login\
  user provides their email address and password\
  email address must be verified first.

userResource.DeleteEmailAddress.ApiOperation.Notes = An API Endpoint to delete user by email address

userResource.DeleteUserByEmail.ApiOperation.Notes = An API Endpoint to delete user App Request {to be enhanced this Endpoint\
   will be scheduled by a cron job}
userAppRequestResource.GetAppDevelopmentRequestByEmail.ApiOperation.Notes = This Endpoint will be used to get \
  App Request 
userResource.UpdateUserAddress.ApiOperation.Notes  = This Endpoint updates user address details
userResource.AddNewUserAddress.ApiOperation.Notes = This Endpoint adds new User Address {in a scenario where a \
  user wants to create a new user address they will call this endpoint}
userResource.UploadImage.ApiOperation.Notes = This Endpoint allows users to upload their profile images
userResource.UpdateUsersRoles.ApiOperation.Notes = This Endpoint Allows APP Admins to assign ADMIN Privileges \
  to NORMAl users
userResource.DownImage.ApiOperation.Notes= This Endpoint will be used to display user profile
userResource.GalleryImages.ApiOperation.Notes = This Endpoint will be used by users to upload \
                                                 their gallery images.
userResource.DownloadImages.ApiOperation.Notes = This Endpoint enables users to view image gallery
userResource.CreateCategory.ApiOperation.Notes = This Endpoint enables users to create Categories
userResource.GetCategories.ApiOperation.Notes = This endpoint will return list of categories
userResource.ClientID.ApiOperation.Notes = This endpoint will be used for public\
      access pages e.g gallery pages and posts pages
userResource.CreateArticle.ApiOperation.Notes = This Endpoint will be called when a user create a post
userAppRequestResource.ArticleByID.ApiOperation.Notes = This Endpoint will be called when user clicks read more\
       in the front application
userAppRequestResource.ArticlesByEmail.ApiOperation.Notes = This Endpoint will be called to display articles for a \
  certain user
userResource.AddNewComment.ApiOperation.Notes = This Endpoint will be called when users are commenting in an \
  article posted by any a user.
userResource.GetCategory.ApiOperation.Notes = This Endpoint will be called when user want to get a category
userResource.UpdateCategory.ApiOperation.Notes = This Endpoint will be used to update category
userResource.DeleteCategory.ApiOperation.Notes = This Endpoint will be used to delete category